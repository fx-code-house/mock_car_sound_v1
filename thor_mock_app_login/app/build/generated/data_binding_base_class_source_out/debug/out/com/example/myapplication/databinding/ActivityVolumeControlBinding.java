// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVolumeControlBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnApplyAll;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnReadCurrent;

  @NonNull
  public final Button btnResetDefault;

  @NonNull
  public final Button btnSaveIdleVolume;

  @NonNull
  public final Button btnSaveMainVolume;

  @NonNull
  public final Button btnSaveNoloadVolume;

  @NonNull
  public final Button btnSaveWorkingVolume;

  @NonNull
  public final SeekBar seekbarIdleVolume;

  @NonNull
  public final SeekBar seekbarMainVolume;

  @NonNull
  public final SeekBar seekbarNoloadVolume;

  @NonNull
  public final SeekBar seekbarWorkingVolume;

  @NonNull
  public final Spinner spinnerSoundPackages;

  @NonNull
  public final TextView tvIdleVolumeValue;

  @NonNull
  public final TextView tvMainVolumeValue;

  @NonNull
  public final TextView tvNoloadVolumeValue;

  @NonNull
  public final TextView tvPackageInfo;

  @NonNull
  public final TextView tvWorkingVolumeValue;

  @NonNull
  public final LinearLayout volumeControlsContainer;

  private ActivityVolumeControlBinding(@NonNull LinearLayout rootView, @NonNull Button btnApplyAll,
      @NonNull Button btnBack, @NonNull Button btnReadCurrent, @NonNull Button btnResetDefault,
      @NonNull Button btnSaveIdleVolume, @NonNull Button btnSaveMainVolume,
      @NonNull Button btnSaveNoloadVolume, @NonNull Button btnSaveWorkingVolume,
      @NonNull SeekBar seekbarIdleVolume, @NonNull SeekBar seekbarMainVolume,
      @NonNull SeekBar seekbarNoloadVolume, @NonNull SeekBar seekbarWorkingVolume,
      @NonNull Spinner spinnerSoundPackages, @NonNull TextView tvIdleVolumeValue,
      @NonNull TextView tvMainVolumeValue, @NonNull TextView tvNoloadVolumeValue,
      @NonNull TextView tvPackageInfo, @NonNull TextView tvWorkingVolumeValue,
      @NonNull LinearLayout volumeControlsContainer) {
    this.rootView = rootView;
    this.btnApplyAll = btnApplyAll;
    this.btnBack = btnBack;
    this.btnReadCurrent = btnReadCurrent;
    this.btnResetDefault = btnResetDefault;
    this.btnSaveIdleVolume = btnSaveIdleVolume;
    this.btnSaveMainVolume = btnSaveMainVolume;
    this.btnSaveNoloadVolume = btnSaveNoloadVolume;
    this.btnSaveWorkingVolume = btnSaveWorkingVolume;
    this.seekbarIdleVolume = seekbarIdleVolume;
    this.seekbarMainVolume = seekbarMainVolume;
    this.seekbarNoloadVolume = seekbarNoloadVolume;
    this.seekbarWorkingVolume = seekbarWorkingVolume;
    this.spinnerSoundPackages = spinnerSoundPackages;
    this.tvIdleVolumeValue = tvIdleVolumeValue;
    this.tvMainVolumeValue = tvMainVolumeValue;
    this.tvNoloadVolumeValue = tvNoloadVolumeValue;
    this.tvPackageInfo = tvPackageInfo;
    this.tvWorkingVolumeValue = tvWorkingVolumeValue;
    this.volumeControlsContainer = volumeControlsContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVolumeControlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVolumeControlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_volume_control, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVolumeControlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_apply_all;
      Button btnApplyAll = ViewBindings.findChildViewById(rootView, id);
      if (btnApplyAll == null) {
        break missingId;
      }

      id = R.id.btn_back;
      Button btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_read_current;
      Button btnReadCurrent = ViewBindings.findChildViewById(rootView, id);
      if (btnReadCurrent == null) {
        break missingId;
      }

      id = R.id.btn_reset_default;
      Button btnResetDefault = ViewBindings.findChildViewById(rootView, id);
      if (btnResetDefault == null) {
        break missingId;
      }

      id = R.id.btn_save_idle_volume;
      Button btnSaveIdleVolume = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveIdleVolume == null) {
        break missingId;
      }

      id = R.id.btn_save_main_volume;
      Button btnSaveMainVolume = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveMainVolume == null) {
        break missingId;
      }

      id = R.id.btn_save_noload_volume;
      Button btnSaveNoloadVolume = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveNoloadVolume == null) {
        break missingId;
      }

      id = R.id.btn_save_working_volume;
      Button btnSaveWorkingVolume = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveWorkingVolume == null) {
        break missingId;
      }

      id = R.id.seekbar_idle_volume;
      SeekBar seekbarIdleVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekbarIdleVolume == null) {
        break missingId;
      }

      id = R.id.seekbar_main_volume;
      SeekBar seekbarMainVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekbarMainVolume == null) {
        break missingId;
      }

      id = R.id.seekbar_noload_volume;
      SeekBar seekbarNoloadVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekbarNoloadVolume == null) {
        break missingId;
      }

      id = R.id.seekbar_working_volume;
      SeekBar seekbarWorkingVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekbarWorkingVolume == null) {
        break missingId;
      }

      id = R.id.spinner_sound_packages;
      Spinner spinnerSoundPackages = ViewBindings.findChildViewById(rootView, id);
      if (spinnerSoundPackages == null) {
        break missingId;
      }

      id = R.id.tv_idle_volume_value;
      TextView tvIdleVolumeValue = ViewBindings.findChildViewById(rootView, id);
      if (tvIdleVolumeValue == null) {
        break missingId;
      }

      id = R.id.tv_main_volume_value;
      TextView tvMainVolumeValue = ViewBindings.findChildViewById(rootView, id);
      if (tvMainVolumeValue == null) {
        break missingId;
      }

      id = R.id.tv_noload_volume_value;
      TextView tvNoloadVolumeValue = ViewBindings.findChildViewById(rootView, id);
      if (tvNoloadVolumeValue == null) {
        break missingId;
      }

      id = R.id.tv_package_info;
      TextView tvPackageInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvPackageInfo == null) {
        break missingId;
      }

      id = R.id.tv_working_volume_value;
      TextView tvWorkingVolumeValue = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkingVolumeValue == null) {
        break missingId;
      }

      id = R.id.volume_controls_container;
      LinearLayout volumeControlsContainer = ViewBindings.findChildViewById(rootView, id);
      if (volumeControlsContainer == null) {
        break missingId;
      }

      return new ActivityVolumeControlBinding((LinearLayout) rootView, btnApplyAll, btnBack,
          btnReadCurrent, btnResetDefault, btnSaveIdleVolume, btnSaveMainVolume,
          btnSaveNoloadVolume, btnSaveWorkingVolume, seekbarIdleVolume, seekbarMainVolume,
          seekbarNoloadVolume, seekbarWorkingVolume, spinnerSoundPackages, tvIdleVolumeValue,
          tvMainVolumeValue, tvNoloadVolumeValue, tvPackageInfo, tvWorkingVolumeValue,
          volumeControlsContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
